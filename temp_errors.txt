src/controllers/returns/CustomerReturnsController.ts(21,60): error TS2307: Cannot find module '../../utils/responses/responseHelpers' or its corresponding type declarations.
src/controllers/returns/CustomerReturnsController.ts(22,29): error TS2307: Cannot find module '../../constants/http' or its corresponding type declarations.
src/models/ShippingZone.ts(48,11): error TS2353: Object literal may only specify known properties, and 'has' does not exist in type 'JsonFilter<"ShippingZone">'.
src/models/ShippingZone.ts(81,11): error TS2353: Object literal may only specify known properties, and 'hasSome' does not exist in type 'JsonFilter<"ShippingZone">'.
src/models/Supplier.ts(88,7): error TS2698: Spread types may only be created from object types.
src/models/Supplier.ts(138,11): error TS2353: Object literal may only specify known properties, and 'AND' does not exist in type 'JsonNullableFilter<"Notification">'.
src/models/Supplier.ts(155,11): error TS2353: Object literal may only specify known properties, and 'AND' does not exist in type 'JsonNullableFilter<"Notification">'.
src/repositories/InventoryRepository.ts(476,7): error TS2322: Type '{ id: `${string}-${string}-${string}-${string}-${string}`; type: StockAlert.LOW_STOCK | StockAlert.OUT_OF_STOCK; severity: "medium" | "critical"; productId: any; productName: any; currentStock: any; threshold: any; message: string; isRead: false; createdAt: any; }[]' is not assignable to type 'InventoryAlert[]'.
  Type '{ id: `${string}-${string}-${string}-${string}-${string}`; type: StockAlert.LOW_STOCK | StockAlert.OUT_OF_STOCK; severity: "medium" | "critical"; productId: any; productName: any; currentStock: any; threshold: any; message: string; isRead: false; createdAt: any; }' is missing the following properties from type 'InventoryAlert': isAcknowledged, isDismissed, updatedAt
src/repositories/RefundRepository.ts(2,10): error TS2300: Duplicate identifier 'PrismaClient'.
src/repositories/RefundRepository.ts(3,10): error TS2300: Duplicate identifier 'PrismaClient'.
src/repositories/RefundRepository.ts(397,9): error TS2416: Property 'findMany' in type 'RefundRepository' is not assignable to the same property in base type 'BaseRepository<Refund, CreateRefundData, UpdateRefundData>'.
  Type '(filters: { status?: RefundStatus[]; refundMethod?: RefundMethod[]; customerId?: string; startDate?: Date; endDate?: Date; search?: string; minAmount?: number; maxAmount?: number; }, options: { ...; }) => Promise<...>' is not assignable to type '(where?: any, options?: { include?: any; orderBy?: any; pagination?: PaginationParams; }) => Promise<{ data: Refund[]; pagination: PaginationMeta; }>'.
    Types of parameters 'options' and 'options' are incompatible.
      Type '{ include?: any; orderBy?: any; pagination?: PaginationParams; }' has no properties in common with type '{ page?: number; limit?: number; sortBy?: string; sortOrder?: "asc" | "desc"; }'.
src/repositories/RefundRepository.ts(509,31): error TS2339: Property 'createPagination' does not exist on type 'RefundRepository'.
src/repositories/ReturnRepository.ts(95,5): error TS2554: Expected 2 arguments, but got 1.
src/repositories/ReturnRepository.ts(475,9): error TS2416: Property 'findMany' in type 'ReturnRepository' is not assignable to the same property in base type 'BaseRepository<ReturnRequest, any, any>'.
  Type '(filters: { status?: ReturnStatus[]; reason?: ReturnReason[]; customerId?: string; startDate?: Date; endDate?: Date; search?: string; state?: string; }, options: { ...; }) => Promise<...>' is not assignable to type '(where?: any, options?: { include?: any; orderBy?: any; pagination?: PaginationParams; }) => Promise<{ data: ReturnRequest[]; pagination: PaginationMeta; }>'.
    Types of parameters 'options' and 'options' are incompatible.
      Type '{ include?: any; orderBy?: any; pagination?: PaginationParams; }' has no properties in common with type '{ page?: number; limit?: number; sortBy?: string; sortOrder?: "asc" | "desc"; }'.
src/repositories/SupportMessageRepository.ts(64,47): error TS2314: Generic type 'BaseRepository<T, CreateData, UpdateData>' requires 3 type argument(s).
src/repositories/SupportMessageRepository.ts(69,20): error TS2339: Property 'prisma' does not exist on type 'SupportMessageRepository'.
src/repositories/SupportMessageRepository.ts(94,9): error TS2353: Object literal may only specify known properties, and 'updatedAt' does not exist in type '(Without<SupportTicketMessageCreateInput, SupportTicketMessageUncheckedCreateInput> & SupportTicketMessageUncheckedCreateInput) | (Without<...> & SupportTicketMessageCreateInput)'.
src/repositories/SupportMessageRepository.ts(100,12): error TS2352: Conversion of type 'Prisma__SupportTicketMessageClient<{ sender: { firstName: string; lastName: string; id: string; email: string; }; replyTo: { sender: { firstName: string; lastName: string; id: string; email: string; }; ticket: { id: string; subject: string; ticketNumber: string; }; agent: { ...; }; replies: { ...; }[]; } & { ...; };...' to type 'Promise<MessageWithDetails>' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Types of property 'then' are incompatible.
    Type '<TResult1 = { sender: { firstName: string; lastName: string; id: string; email: string; }; replyTo: { sender: { firstName: string; lastName: string; id: string; email: string; }; ticket: { id: string; subject: string; ticketNumber: string; }; agent: { ...; }; replies: { ...; }[]; } & { ...; }; ticket: { ...; }; agen...' is not comparable to type '<TResult1 = MessageWithDetails, TResult2 = never>(onfulfilled?: (value: MessageWithDetails) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<...>) => Promise<...>'.
      Types of parameters 'onfulfilled' and 'onfulfilled' are incompatible.
        Types of parameters 'value' and 'value' are incompatible.
          Type '{ sender: { firstName: string; lastName: string; id: string; email: string; }; replyTo: { sender: { firstName: string; lastName: string; id: string; email: string; }; ticket: { id: string; subject: string; ticketNumber: string; }; agent: { ...; }; replies: { ...; }[]; } & { ...; }; ticket: { ...; }; agent: { ...; };...' is not comparable to type 'MessageWithDetails'.
            Types of property 'replies' are incompatible.
              Type '({ sender: { firstName: string; lastName: string; id: string; email: string; }; ticket: { id: string; subject: string; ticketNumber: string; }; agent: { id: string; user: { firstName: string; lastName: string; }; agentNumber: string; }; replies: { ...; }[]; } & { ...; })[]' is not comparable to type 'MessageWithDetails[]'.
                Type '{ sender: { firstName: string; lastName: string; id: string; email: string; }; ticket: { id: string; subject: string; ticketNumber: string; }; agent: { id: string; user: { firstName: string; lastName: string; }; agentNumber: string; }; replies: { ...; }[]; } & { ...; }' is not comparable to type 'MessageWithDetails'.
                  Types of property 'replies' are incompatible.
                    Type '{ type: SupportMessageType; id: string; createdAt: Date; template: string; deliveredAt: Date; messageId: string; subject: string; attachments: JsonValue; ... 12 more ...; readAt: Date; }[]' is not comparable to type 'MessageWithDetails[]'.
                      Type '{ type: SupportMessageType; id: string; createdAt: Date; template: string; deliveredAt: Date; messageId: string; subject: string; attachments: JsonValue; ... 12 more ...; readAt: Date; }' is missing the following properties from type 'MessageWithDetails': ticket, replies
src/repositories/SupportMessageRepository.ts(622,12): error TS2352: Conversion of type 'Prisma__SupportTicketMessageClient<{ sender: { firstName: string; lastName: string; id: string; email: string; }; replyTo: { type: SupportMessageType; id: string; createdAt: Date; template: string; deliveredAt: Date; ... 15 more ...; readAt: Date; }; ticket: { ...; }; agent: { ...; }; replies: { ...; }[]; } & { ...;...' to type 'Promise<MessageWithDetails>' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Types of property 'then' are incompatible.
    Type '<TResult1 = { sender: { firstName: string; lastName: string; id: string; email: string; }; replyTo: { type: SupportMessageType; id: string; createdAt: Date; template: string; ... 16 more ...; readAt: Date; }; ticket: { ...; }; agent: { ...; }; replies: { ...; }[]; } & { ...; }, TResult2 = never>(onfulfilled?: (value...' is not comparable to type '<TResult1 = MessageWithDetails, TResult2 = never>(onfulfilled?: (value: MessageWithDetails) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<...>) => Promise<...>'.
      Types of parameters 'onfulfilled' and 'onfulfilled' are incompatible.
        Types of parameters 'value' and 'value' are incompatible.
          Type '{ sender: { firstName: string; lastName: string; id: string; email: string; }; replyTo: { type: SupportMessageType; id: string; createdAt: Date; template: string; deliveredAt: Date; ... 15 more ...; readAt: Date; }; ticket: { ...; }; agent: { ...; }; replies: { ...; }[]; } & { ...; }' is not comparable to type 'MessageWithDetails'.
            Types of property 'replies' are incompatible.
              Type '{ type: SupportMessageType; id: string; createdAt: Date; template: string; deliveredAt: Date; messageId: string; subject: string; attachments: JsonValue; ... 12 more ...; readAt: Date; }[]' is not comparable to type 'MessageWithDetails[]'.
                Type '{ type: SupportMessageType; id: string; createdAt: Date; template: string; deliveredAt: Date; messageId: string; subject: string; attachments: JsonValue; ... 12 more ...; readAt: Date; }' is missing the following properties from type 'MessageWithDetails': ticket, replies
src/repositories/SupportTicketRepository.ts(74,46): error TS2314: Generic type 'BaseRepository<T, CreateData, UpdateData>' requires 3 type argument(s).
src/repositories/SupportTicketRepository.ts(79,20): error TS2339: Property 'prisma' does not exist on type 'SupportTicketRepository'.
src/repositories/SupportTicketRepository.ts(97,7): error TS2322: Type '{ status: "OPEN"; priority: $Enums.SupportTicketPriority; createdAt: Date; updatedAt: Date; ticketNumber: string; subject: string; description: string; category: SupportTicketCategory; ... 7 more ...; metadata?: any; }' is not assignable to type '(Without<SupportTicketCreateInput, SupportTicketUncheckedCreateInput> & SupportTicketUncheckedCreateInput) | (Without<...> & SupportTicketCreateInput)'.
  Type '{ status: "OPEN"; priority: $Enums.SupportTicketPriority; createdAt: Date; updatedAt: Date; ticketNumber: string; subject: string; description: string; category: SupportTicketCategory; ... 7 more ...; metadata?: any; }' is not assignable to type 'Without<SupportTicketUncheckedCreateInput, SupportTicketCreateInput> & SupportTicketCreateInput'.
    Type '{ status: "OPEN"; priority: $Enums.SupportTicketPriority; createdAt: Date; updatedAt: Date; ticketNumber: string; subject: string; description: string; category: SupportTicketCategory; ... 7 more ...; metadata?: any; }' is not assignable to type 'Without<SupportTicketUncheckedCreateInput, SupportTicketCreateInput>'.
      Types of property 'orderId' are incompatible.
        Type 'string' is not assignable to type 'never'.
src/repositories/SupportTicketRepository.ts(302,9): error TS2353: Object literal may only specify known properties, and 'hasEvery' does not exist in type 'JsonNullableFilter<"SupportTicket">'.
src/routes/admin/shipping.ts(3,10): error TS2724: '"@/middleware/auth/authenticate"' has no exported member named 'authenticateToken'. Did you mean 'authenticate'?
src/routes/admin/shipping.ts(6,10): error TS2614: Module '"@/middleware/logging/auditLogging"' has no exported member 'auditLogging'. Did you mean to use 'import auditLogging from "@/middleware/logging/auditLogging"' instead?
src/routes/admin/support.ts(19,63): error TS2307: Cannot find module '../../services/notifications' or its corresponding type declarations.
src/routes/admin/support.ts(20,10): error TS2305: Module '"../../config/serviceContainer"' has no exported member 'container'.
src/routes/admin/support.ts(35,3): error TS2554: Expected 0 arguments, but got 4.
src/routes/admin/support.ts(42,3): error TS2554: Expected 0 arguments, but got 2.
src/routes/admin/support.ts(47,3): error TS2554: Expected 0 arguments, but got 5.
src/routes/admin/support.ts(61,3): error TS2345: Argument of type 'import("C:/Users/elijah.ogunbiyi/Documents/Demos/bareloft_ecommerce_node.ts/src/repositories/SupportKnowledgeBaseRepository").SupportKnowledgeBaseRepository' is not assignable to parameter of type 'SupportKnowledgeBaseRepository'.
  The types returned by 'incrementViewCount(...)' are incompatible between these types.
    Type 'Promise<{ id: string; isFeatured: boolean; title: string; category: SupportTicketCategory; createdAt: Date; status: KnowledgeBaseStatus; ... 17 more ...; relatedArticles: JsonValue; }>' is not assignable to type 'Promise<void>'.
      Type '{ id: string; isFeatured: boolean; title: string; category: SupportTicketCategory; createdAt: Date; status: KnowledgeBaseStatus; updatedAt: Date; ... 16 more ...; relatedArticles: JsonValue; }' is not assignable to type 'void'.
src/routes/admin/support.ts(65,3): error TS2345: Argument of type 'import("C:/Users/elijah.ogunbiyi/Documents/Demos/bareloft_ecommerce_node.ts/src/services/support/SupportTicketService").SupportTicketService' is not assignable to parameter of type 'SupportTicketService'.
  The types returned by 'getTickets(...)' are incompatible between these types.
    Type 'Promise<ApiResponse<PaginatedResult<TicketWithDetails>>>' is not assignable to type 'Promise<{ success: boolean; tickets: any[]; pagination: { currentPage: number; totalPages: number; totalItems: number; itemsPerPage: number; }; }>'.
      Type 'ApiResponse<PaginatedResult<TicketWithDetails>>' is missing the following properties from type '{ success: boolean; tickets: any[]; pagination: { currentPage: number; totalPages: number; totalItems: number; itemsPerPage: number; }; }': tickets, pagination
src/routes/v1/returns.ts(12,34): error TS2307: Cannot find module '../../middleware/upload/uploadMiddleware' or its corresponding type declarations.
src/services/analytics/InventoryAnalyticsService.ts(21,10): error TS2614: Module '"../../utils/helpers/nigerian"' has no exported member 'NIGERIAN_STATES'. Did you mean to use 'import NIGERIAN_STATES from "../../utils/helpers/nigerian"' instead?
src/services/analytics/InventoryReportingService.ts(6,10): error TS2614: Module '"../../utils/helpers/nigerian"' has no exported member 'NIGERIAN_STATES'. Did you mean to use 'import NIGERIAN_STATES from "../../utils/helpers/nigerian"' instead?
src/services/analytics/InventoryReportingService.ts(484,20): error TS2551: Property 'generateTurnoverExcel' does not exist on type 'InventoryReportingService'. Did you mean 'generateOverviewExcel'?
src/services/index.ts(3,29): error TS2307: Cannot find module './auth/UserService' or its corresponding type declarations.
src/services/orders/BulkOrderService.ts(569,23): error TS2339: Property 'INVALID_REQUEST' does not exist on type '{ readonly INVALID_CREDENTIALS: "INVALID_CREDENTIALS"; readonly TOKEN_EXPIRED: "TOKEN_EXPIRED"; readonly TOKEN_INVALID: "TOKEN_INVALID"; readonly INVALID_TOKEN: "INVALID_TOKEN"; ... 19 more ...; readonly RATE_LIMIT_EXCEEDED: "RATE_LIMIT_EXCEEDED"; }'.
src/services/returns/CustomerReturnsService.ts(407,34): error TS2339: Property 'productName' does not exist on type 'OrderItem'.
src/services/returns/CustomerReturnsService.ts(612,63): error TS2339: Property 'name' does not exist on type 'File'.
src/services/returns/ReturnShippingService.ts(8,41): error TS2307: Cannot find module '../../repositories/returns/ReturnRequestRepository' or its corresponding type declarations.
src/services/returns/ReturnShippingService.ts(11,37): error TS2307: Cannot find module '../notification/NotificationService' or its corresponding type declarations.
src/services/returns/ReturnShippingService.ts(137,28): error TS2554: Expected 1 arguments, but got 0.
src/services/returns/ReturnShippingService.ts(503,27): error TS2339: Property 'customerId' does not exist on type 'Order'.
src/services/shipping/JumiaLogisticsService.ts(54,41): error TS2352: Conversion of type '{ firstName: string; lastName: string; addressLine1: string; phoneNumber: string; country: string; originCity: string; originState: string; destinationCity: string; destinationState: string; packageWeight: number; packageDimensions: PackageDimensions; declaredValue: number; serviceType?: string; }' to type 'NigerianAddress' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ firstName: string; lastName: string; addressLine1: string; phoneNumber: string; country: string; originCity: string; originState: string; destinationCity: string; destinationState: string; packageWeight: number; packageDimensions: PackageDimensions; declaredValue: number; serviceType?: string; }' is missing the following properties from type 'NigerianAddress': city, state
src/services/shipping/JumiaLogisticsService.ts(320,16): error TS2339: Property 'logError' does not exist on type 'JumiaLogisticsService'.
src/services/shipping/LocalCarrierService.ts(66,41): error TS2352: Conversion of type '{ firstName: string; lastName: string; addressLine1: string; phoneNumber: string; country: string; originCity: string; originState: string; destinationCity: string; destinationState: string; packageWeight: number; packageDimensions: PackageDimensions; declaredValue: number; serviceType?: string; }' to type 'NigerianAddress' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ firstName: string; lastName: string; addressLine1: string; phoneNumber: string; country: string; originCity: string; originState: string; destinationCity: string; destinationState: string; packageWeight: number; packageDimensions: PackageDimensions; declaredValue: number; serviceType?: string; }' is missing the following properties from type 'NigerianAddress': city, state
src/services/shipping/ShippingAnalyticsService.ts(31,12): error TS2339: Property 'logInfo' does not exist on type 'ShippingAnalyticsService'.
src/services/support/SupportKnowledgeBaseService.ts(9,10): error TS2305: Module '"../../types"' has no exported member 'PaginationOptions'.
src/services/support/SupportKnowledgeBaseService.ts(9,29): error TS2305: Module '"../../types"' has no exported member 'PaginatedResult'.
src/services/support/SupportKnowledgeBaseService.ts(304,20): error TS2339: Property 'slug' does not exist on type '{ lastUpdatedBy: string; title?: string; content?: string; summary?: string; category?: SupportTicketCategory; subcategory?: string; tags?: string[]; language?: SupportLanguage; ... 5 more ...; metadata?: any; }'.
src/services/support/SupportKnowledgeBaseService.ts(597,13): error TS2740: Type '{ topArticles: { id: string; title: string; viewCount: number; rating: number; }[]; recentUpdates: { id: string; title: string; updatedAt: Date; updaterName: string; }[]; }' is missing the following properties from type 'KnowledgeBaseStats': total, published, draft, archived, and 4 more.
src/tests/admin-bulk-order-processing.test.ts(2,10): error TS2614: Module '"../app"' has no exported member 'app'. Did you mean to use 'import app from "../app"' instead?
src/tests/admin-returns-refunds.test.ts(2,10): error TS2614: Module '"../app"' has no exported member 'app'. Did you mean to use 'import app from "../app"' instead?
src/tests/admin-returns-refunds.test.ts(11,3): error TS2305: Module '"../types"' has no exported member 'createTestUser'.
src/tests/admin-returns-refunds.test.ts(12,3): error TS2305: Module '"../types"' has no exported member 'createTestOrder'.
src/tests/admin-returns-refunds.test.ts(13,3): error TS2305: Module '"../types"' has no exported member 'createTestAdmin'.
src/tests/admin-returns-refunds.test.ts(14,3): error TS2305: Module '"../types"' has no exported member 'generateJWT'.
src/tests/customer-returns-system.test.ts(10,29): error TS2307: Cannot find module '../utils/auth/jwtUtils' or its corresponding type declarations.
src/tests/customer-returns-system.test.ts(46,9): error TS2322: Type '"PAID"' is not assignable to type 'PaymentStatus'.
src/tests/customer-returns-system.test.ts(54,15): error TS2353: Object literal may only specify known properties, and 'productName' does not exist in type 'OrderItemUncheckedCreateWithoutOrderInput'.
src/tests/customer-returns-system.test.ts(61,15): error TS2353: Object literal may only specify known properties, and 'productName' does not exist in type 'OrderItemUncheckedCreateWithoutOrderInput'.
src/tests/inventory-alerts.test.ts(18,10): error TS2614: Module '"../app"' has no exported member 'app'. Did you mean to use 'import app from "../app"' instead?
src/tests/inventory-alerts.test.ts(536,9): error TS2554: Expected 1 arguments, but got 0.
src/tests/inventory-analytics.test.ts(3,10): error TS2614: Module '"../app"' has no exported member 'app'. Did you mean to use 'import app from "../app"' instead?
src/tests/inventory-analytics.test.ts(21,9): error TS2353: Object literal may only specify known properties, and 'password' does not exist in type '(Without<UserCreateInput, UserUncheckedCreateInput> & UserUncheckedCreateInput) | (Without<...> & UserCreateInput)'.
src/tests/inventory-analytics.test.ts(30,49): error TS2345: Argument of type '{ userId: string; role: "ADMIN"; }' is not assignable to parameter of type 'Omit<JWTPayload, "iat" | "exp">'.
  Type '{ userId: string; role: "ADMIN"; }' is missing the following properties from type 'Omit<JWTPayload, "iat" | "exp">': phoneNumber, sessionId
src/tests/inventory-analytics.test.ts(60,13): error TS2322: Type 'undefined[]' is not assignable to type 'ProductImageUncheckedCreateNestedManyWithoutProductInput | ProductImageCreateNestedManyWithoutProductInput'.
src/tests/shipping-system.test.ts(2,10): error TS2614: Module '"../app"' has no exported member 'app'. Did you mean to use 'import app from "../app"' instead?
src/tests/support-system.test.ts(26,63): error TS2307: Cannot find module '@/services/notifications' or its corresponding type declarations.
src/tests/support-system.test.ts(98,7): error TS2554: Expected 0 arguments, but got 4.
src/tests/support-system.test.ts(105,7): error TS2554: Expected 0 arguments, but got 2.
src/tests/support-system.test.ts(110,7): error TS2554: Expected 0 arguments, but got 5.
src/types/index.ts(41,1): error TS2308: Module './order.types' has already exported a member named 'BulkRefundRequest'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(68,1): error TS2308: Module './order.types' has already exported a member named 'BulkNotificationRequest'. Consider explicitly re-exporting to resolve the ambiguity.
