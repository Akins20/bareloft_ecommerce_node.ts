import { ShippingCarrier as ShippingCarrierModel } from "./ShippingCarrier";
import { Shipment as ShipmentModel } from "./Shipment";
import { TrackingEvent as TrackingEventModel } from "./TrackingEvent";
import { ShippingRate as ShippingRateModel } from "./ShippingRate";
import { ShippingZone as ShippingZoneModel } from "./ShippingZone";
export * from "./ReturnRequest";
export { default as UserModel, UserSchema } from "./User";
export { default as AddressModel, AddressSchema } from "./Address";
export { default as ProductModel, ProductSchema } from "./Product";
export { default as CategoryModel, CategorySchema } from "./Category";
export { default as CartModel, CartSchema } from "./Cart";
export { default as CartItemModel, CartItemSchema } from "./CartItem";
export { default as OrderModel, OrderSchema } from "./Order";
export { default as OrderItemModel, OrderItemSchema } from "./OrderItem";
export { default as InventoryModel, InventorySchema } from "./Inventory";
export { default as InventoryMovementModel, InventoryMovementSchema, } from "./InventoryMovement";
export { default as ProductImageModel, ProductImageSchema, } from "./ProductImage";
export { default as ProductReviewModel, ProductReviewSchema, } from "./ProductReview";
export { default as WishlistItemModel, WishlistItemSchema, } from "./WishlistItem";
export { default as OTPCodeModel, OTPCodeSchema } from "./OTPCode";
export { default as SessionModel, SessionSchema } from "./Session";
export { default as PaymentTransactionModel, PaymentTransactionSchema, } from "./PaymentTransaction";
export { default as StockReservationModel, StockReservationSchema, } from "./StockReservation";
export { default as OrderTimelineEventModel, OrderTimelineEventSchema, } from "./OrderTimelineEvent";
export { default as CouponModel, CouponSchema } from "./Coupon";
export { default as NotificationModel, NotificationSchema, } from "./Notification";
export { ShippingCarrier as ShippingCarrierModel } from "./ShippingCarrier";
export { Shipment as ShipmentModel } from "./Shipment";
export { TrackingEvent as TrackingEventModel } from "./TrackingEvent";
export { ShippingRate as ShippingRateModel } from "./ShippingRate";
export { ShippingZone as ShippingZoneModel } from "./ShippingZone";
export declare const ProductModels: {
    Product: import(".prisma/client").Prisma.ProductDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Category: import(".prisma/client").Prisma.CategoryDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    ProductImage: import(".prisma/client").Prisma.ProductImageDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    ProductReview: import(".prisma/client").Prisma.ProductReviewDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    WishlistItem: import(".prisma/client").Prisma.WishlistItemDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
};
export declare const ShoppingModels: {
    Cart: import(".prisma/client").Prisma.CartItemDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    CartItem: import(".prisma/client").Prisma.CartItemDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Order: import(".prisma/client").Prisma.OrderDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    OrderItem: import(".prisma/client").Prisma.OrderItemDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    OrderTimelineEvent: import(".prisma/client").Prisma.OrderTimelineEventDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
};
export declare const InventoryModels: {
    Inventory: import(".prisma/client").Prisma.ProductDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    InventoryMovement: import(".prisma/client").Prisma.InventoryMovementDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    StockReservation: import(".prisma/client").Prisma.StockReservationDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
};
export declare const AuthModels: {
    User: import(".prisma/client").Prisma.UserDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Address: import(".prisma/client").Prisma.AddressDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    OTPCode: import(".prisma/client").Prisma.OTPCodeDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Session: import(".prisma/client").Prisma.SessionDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
};
export declare const PaymentModels: {
    PaymentTransaction: import(".prisma/client").Prisma.PaymentTransactionDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Coupon: import(".prisma/client").Prisma.CouponDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
};
export declare const CommunicationModels: {
    Notification: import(".prisma/client").Prisma.NotificationDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
};
export declare const ShippingModels: {
    ShippingCarrier: typeof ShippingCarrierModel;
    Shipment: typeof ShipmentModel;
    TrackingEvent: typeof TrackingEventModel;
    ShippingRate: typeof ShippingRateModel;
    ShippingZone: typeof ShippingZoneModel;
};
export declare const AllModels: {
    User: import(".prisma/client").Prisma.UserDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Address: import(".prisma/client").Prisma.AddressDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    OTPCode: import(".prisma/client").Prisma.OTPCodeDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Session: import(".prisma/client").Prisma.SessionDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Product: import(".prisma/client").Prisma.ProductDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Category: import(".prisma/client").Prisma.CategoryDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    ProductImage: import(".prisma/client").Prisma.ProductImageDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    ProductReview: import(".prisma/client").Prisma.ProductReviewDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    WishlistItem: import(".prisma/client").Prisma.WishlistItemDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Cart: import(".prisma/client").Prisma.CartItemDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    CartItem: import(".prisma/client").Prisma.CartItemDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Order: import(".prisma/client").Prisma.OrderDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    OrderItem: import(".prisma/client").Prisma.OrderItemDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    OrderTimelineEvent: import(".prisma/client").Prisma.OrderTimelineEventDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Inventory: import(".prisma/client").Prisma.ProductDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    InventoryMovement: import(".prisma/client").Prisma.InventoryMovementDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    StockReservation: import(".prisma/client").Prisma.StockReservationDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    PaymentTransaction: import(".prisma/client").Prisma.PaymentTransactionDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Coupon: import(".prisma/client").Prisma.CouponDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    Notification: import(".prisma/client").Prisma.NotificationDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
    ShippingCarrier: typeof ShippingCarrierModel;
    Shipment: typeof ShipmentModel;
    TrackingEvent: typeof TrackingEventModel;
    ShippingRate: typeof ShippingRateModel;
    ShippingZone: typeof ShippingZoneModel;
};
export declare const AllSchemas: {
    User: string;
    Address: string;
    Product: string;
    Category: string;
    Cart: string;
    CartItem: string;
    Order: string;
    OrderItem: string;
    Inventory: string;
    InventoryMovement: string;
};
export declare const ModelNames: string[];
export type ModelName = keyof typeof AllModels;
export type ModelType = (typeof AllModels)[ModelName];
//# sourceMappingURL=index.d.ts.map