export declare const InventoryModel: import(".prisma/client").Prisma.ProductDelegate<import("@prisma/client/runtime/library").DefaultArgs>;
export declare const InventorySchema = "\nmodel Inventory {\n  id                String              @id @default(cuid())\n  productId         String              @unique @map(\"product_id\")\n  quantity          Int                 @default(0)\n  reservedQuantity  Int                 @default(0) @map(\"reserved_quantity\")\n  lowStockThreshold Int                 @default(10) @map(\"low_stock_threshold\")\n  reorderPoint      Int                 @default(5) @map(\"reorder_point\")\n  reorderQuantity   Int                 @default(50) @map(\"reorder_quantity\")\n  status            InventoryStatus     @default(ACTIVE)\n  trackInventory    Boolean             @default(true) @map(\"track_inventory\")\n  allowBackorder    Boolean             @default(false) @map(\"allow_backorder\")\n  averageCost       Decimal             @default(0) @map(\"average_cost\") @db.Decimal(10, 2)\n  lastCost          Decimal             @default(0) @map(\"last_cost\") @db.Decimal(10, 2)\n  lastRestockedAt   DateTime?           @map(\"last_restocked_at\")\n  lastSoldAt        DateTime?           @map(\"last_sold_at\")\n  createdAt         DateTime            @default(now()) @map(\"created_at\")\n  updatedAt         DateTime            @updatedAt @map(\"updated_at\")\n\n  // Relations\n  product           Product             @relation(fields: [productId], references: [id], onDelete: Cascade)\n  movements         InventoryMovement[]\n  reservations      StockReservation[]\n\n  @@map(\"inventory\")\n}\n\nenum InventoryStatus {\n  ACTIVE\n  INACTIVE\n  DISCONTINUED\n  OUT_OF_STOCK\n  LOW_STOCK\n  OVERSTOCKED\n}\n";
export default InventoryModel;
//# sourceMappingURL=Inventory.d.ts.map